package liskov.substitution.principle.main;

import liskov.substitution.principle.vehicle.impl.ElectricCar;
import liskov.substitution.principle.vehicles.Vehicle;

public class App {

	/*
	 * L - Liskov Substitution Principle
	 *
	 *
	 * child classes should never break the parent class type definition
	 *
	 * subtypes must be substitutable for their base type
	 *
	 * it is not independent from Open Close Principle + interface segregation Principle
	 * interface segregation Principle --> break of interfaces into smaller interfaces
	 *
	 */

	public static void main(String[] args) {

		Vehicle car = new ElectricCar();

		if (car instanceof ElectricCar) {
			System.out.println("Unable to add Fuel to Electric Car");
		}
		else {
			car.addFuel();
		}

	}

}
